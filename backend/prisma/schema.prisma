// Prisma Schema untuk Sistem BPS Pringsewu
// File: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =====================
// USER MANAGEMENT
// =====================

model User {
  id                String   @id @default(cuid())
  nip               String   @unique
  nama              String
  email             String?  // OPTIONAL - untuk komunikasi saja
  password          String
  role              Role     @default(STAFF)
  jenisKelamin      Gender
  tanggalLahir      DateTime?
  alamat            String?
  mobilePhone       String?
  pendidikanTerakhir String?
  jabatan           String?
  golongan          String?   // IV/b, III/a, etc.
  status            String   @default("PNS") // PNS, PPPK
  instansi          String?
  kantor            String?
  username          String   @unique
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  evaluationsGiven    Evaluation[] @relation("Evaluator")
  evaluationsReceived Evaluation[] @relation("Target")
  attendances         Attendance[]
  ckpScores          CkpScore[]
  finalEvaluations   FinalEvaluation[]

  @@map("users")
}

enum Role {
  STAFF
  ADMIN
  PIMPINAN
}

enum Gender {
  LK
  PR
}

// =====================
// PERIOD MANAGEMENT
// =====================

model Period {
  id           String   @id @default(cuid())
  tahun        Int
  bulan        Int
  namaPeriode  String
  noPeriode    Int?
  isActive     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  evaluations      Evaluation[]
  attendances      Attendance[]
  ckpScores       CkpScore[]
  finalEvaluations FinalEvaluation[]

  @@unique([tahun, bulan])
  @@map("periods")
}

// =====================
// EVALUATION SYSTEM
// =====================

model EvaluationParameter {
  id            String   @id @default(cuid())
  namaParameter String
  deskripsi     String?
  kategori      String   @default("berakhlak")
  urutan        Int
  createdAt     DateTime @default(now())

  // Relations
  evaluationScores EvaluationScore[]

  @@map("evaluation_parameters")
}

model Evaluation {
  id           String            @id @default(cuid())
  evaluatorId  String
  periodId     String
  targetUserId String
  ranking      Int               // 1, 2, 3 (tokoh ke-1, ke-2, ke-3)
  status       EvaluationStatus  @default(DRAFT)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  // Relations
  evaluator User   @relation("Evaluator", fields: [evaluatorId], references: [id])
  target    User   @relation("Target", fields: [targetUserId], references: [id])
  period    Period @relation(fields: [periodId], references: [id])
  scores    EvaluationScore[]

  @@unique([evaluatorId, periodId, targetUserId])
  @@map("evaluations")
}

model EvaluationScore {
  id           String @id @default(cuid())
  evaluationId String
  parameterId  String
  score        Int    // 80-100 (sesuai rentang tokoh ke-1/2/3)
  createdAt    DateTime @default(now())

  // Relations
  evaluation Evaluation          @relation(fields: [evaluationId], references: [id], onDelete: Cascade)
  parameter  EvaluationParameter @relation(fields: [parameterId], references: [id])

  @@unique([evaluationId, parameterId])
  @@map("evaluation_scores")
}

enum EvaluationStatus {
  DRAFT
  SUBMITTED
}

// =====================
// ATTENDANCE & CKP
// =====================

model Attendance {
  id         String   @id @default(cuid())
  userId     String
  periodId   String
  
  // Persentase Total (biasanya 100%)
  persentaseTotal Float @default(100.0)
  
  // Input Persentase Minus untuk setiap kelalaian
  tidakKerja      Float @default(0.0)  // TK
  pulangAwal      Float @default(0.0)  // PSW  
  telat           Float @default(0.0)  // TLT
  absenApel       Float @default(0.0)  // APEL
  cuti            Float @default(0.0)  // CT
  
  // Total Minus (otomatis calculated)
  totalMinus      Float @default(0.0)  // TM
  
  // Nilai Final Presensi (PSI - TM)
  nilaiPresensi   Float @default(100.0)
  
  keterangan String?
  inputBy    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  period Period @relation(fields: [periodId], references: [id])

  @@unique([userId, periodId])
  @@map("attendance")
}

model CkpScore {
  id         String   @id @default(cuid())
  userId     String
  periodId   String
  score      Float    // 0-100
  keterangan String?
  inputBy    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  period Period @relation(fields: [periodId], references: [id])

  @@unique([userId, periodId])
  @@map("ckp_scores")
}

// =====================
// FINAL RESULTS
// =====================

model FinalEvaluation {
  id               String   @id @default(cuid())
  userId           String
  periodId         String
  berakhlakScore   Float    @default(0)
  presensiScore    Float    @default(0)
  ckpScore         Float    @default(0)
  finalScore       Float    @default(0)
  totalEvaluators  Int      @default(0)
  ranking          Int?
  isBestEmployee   Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  period Period @relation(fields: [periodId], references: [id])

  @@unique([userId, periodId])
  @@map("final_evaluations")
}

// =====================
// MASTER DATA
// =====================

model AspekPenilaian {
  id            String   @id @default(cuid())
  namaAspek     String
  deskripsi     String?
  kategori      String?
  bobot         Float    @default(0.0) // 0.3 untuk BerAKHLAK, 0.4 untuk Presensi, 0.3 untuk CKP
  createdAt     DateTime @default(now())

  @@map("aspek_penilaian")
}

model RentangNilai {
  id         String   @id @default(cuid())
  kategori   String   // tokoh_ke_1, tokoh_ke_2, tokoh_ke_3
  nilaiMin   Int
  nilaiMax   Int
  deskripsi  String?
  createdAt  DateTime @default(now())

  @@map("rentang_nilai")
}